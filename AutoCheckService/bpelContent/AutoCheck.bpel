<!-- AutoCheck BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Thu May 26 22:47:30 AEST 2016 -->
<bpel:process name="AutoCheck"
         targetNamespace="http://assign2.soacourse.unsw.edu.au/autocheck"
         suppressJoinFailure="yes"
         xmlns:tns="http://assign2.soacourse.unsw.edu.au/autocheck"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://driverslicense.assign2.soacourse.unsw.edu.au"
         xmlns:ns0="http://addressservice.assign2.soacourse.unsw.edu.au">

    <!-- Import the client WSDL -->
	<bpel:import location="AutoCheckArtifacts.wsdl" namespace="http://assign2.soacourse.unsw.edu.au/autocheck" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:AutoCheck"
                     myRole="AutoCheckProvider" />
        <bpel:partnerLink name="AddressServiceLink" 
        			partnerLinkType="tns:AddressServiceLinkType" 
        			partnerRole="AddressServiceProvider" />
        <bpel:partnerLink name="DriversLicenseServiceLink" 
        			partnerLinkType="tns:DriversLicenseServiceLinkType" 
        			partnerRole="DriversLicenseServiceProvider" />
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                messageType="tns:AutoCheckRequestMessage"/>
        <!-- Reference to the message that will be returned to the requester -->
        <bpel:variable name="output"
                messageType="tns:AutoCheckResponseMessage" />
        <!-- Variables for external validation services. -->
        <bpel:variable name="DriversLicenseServiceLinkResponse" 
        		messageType="ns:validateDriversLicenseResponseMsg" />
        <bpel:variable name="DriversLicenseServiceLinkRequest" 
        		messageType="ns:validateDriversLicenseRequestMsg" />
        <bpel:variable name="AddressServiceLinkResponse" 
        		messageType="ns0:validateAddressResponseMsg" />
        <bpel:variable name="AddressServiceLinkRequest" 
        		messageType="ns0:validateAddressRequestMsg" />
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in AutoCheck.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 portType="tns:AutoCheck"
                 operation="validate" variable="input"
                 createInstance="yes"/>
        
        <bpel:assign validate="no" name="InitializeOutput">
            <bpel:copy>
                <bpel:from>
                	<bpel:literal xml:space="preserve">
	               		<tns:AutoCheckResponse xmlns:tns="http://assign2.soacourse.unsw.edu.au/autocheck" 
	               				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
						  <tns:isValid>false</tns:isValid>
						</tns:AutoCheckResponse>
					</bpel:literal>
				</bpel:from>
                <bpel:to variable="output" part="payload"></bpel:to>
            </bpel:copy>
            
        </bpel:assign>
        <bpel:if name="IfDriversLicense">
        	<bpel:condition>bpel:getVariableData('input', 'payload', 'tns:driversLicense')!=''</bpel:condition>
            
            <bpel:sequence>
                <bpel:assign validate="no" name="AssignDLRequest">
		            <bpel:copy>
		                <bpel:from><bpel:literal><tns:validateDriversLicenseRequest 
		                		xmlns:tns="http://driverslicense.assign2.soacourse.unsw.edu.au" 
		                		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
						  <fullName>fullName</fullName>
						  <licenseNumber>licenseNumber</licenseNumber>
						</tns:validateDriversLicenseRequest>
						</bpel:literal></bpel:from>
		                <bpel:to variable="DriversLicenseServiceLinkRequest" part="parameters"></bpel:to>
		            </bpel:copy>
		            <bpel:copy>
		                <bpel:from part="payload" variable="input">
		                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:fullName]]></bpel:query>
		                </bpel:from>
		                <bpel:to part="parameters" variable="DriversLicenseServiceLinkRequest">
		                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[fullName]]></bpel:query>
		                </bpel:to>
		            </bpel:copy>
		            <bpel:copy>
		                <bpel:from part="payload" variable="input">
		                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:driversLicense]]></bpel:query>
		                </bpel:from>
		                <bpel:to part="parameters" variable="DriversLicenseServiceLinkRequest">
		                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[licenseNumber]]></bpel:query>
		                </bpel:to>
		            </bpel:copy>
	        	</bpel:assign>
                <bpel:invoke name="InvokeDL" partnerLink="DriversLicenseServiceLink" 
                		operation="validateDriversLicense" 
                		inputVariable="DriversLicenseServiceLinkRequest" 
                		outputVariable="DriversLicenseServiceLinkResponse" />
                
                <bpel:assign validate="no" name="AssignOutput">
                    <bpel:copy><bpel:from part="parameters" variable="DriversLicenseServiceLinkResponse">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[isValid]]></bpel:query>
                        </bpel:from>
                        <bpel:to part="payload" variable="output">
                            <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:isValid]]></bpel:query>
                        </bpel:to>
                    </bpel:copy>
                </bpel:assign>
            </bpel:sequence>
            <bpel:else>
            	<bpel:sequence>
                    <bpel:assign validate="no" name="AssignAdrRequest"><bpel:copy>
			                <bpel:from>
			                    <bpel:literal>
			                        <tns:validateAddressRequest xmlns:tns="http://addressservice.assign2.soacourse.unsw.edu.au" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><fullName>fullName</fullName>
			  							<address>address</address>
			                        </tns:validateAddressRequest>
			                    </bpel:literal>
			                </bpel:from><bpel:to variable="AddressServiceLinkRequest" part="parameters"></bpel:to>
			            </bpel:copy>
			            <bpel:copy>
			                <bpel:from part="payload" variable="input">
			                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:fullName]]></bpel:query>
			                </bpel:from>
			                <bpel:to part="parameters" variable="AddressServiceLinkRequest">
			                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[fullName]]></bpel:query>
			                </bpel:to>
			            </bpel:copy><bpel:copy>
			                <bpel:from part="payload" variable="input">
			                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:address]]></bpel:query>
			                </bpel:from>
			                <bpel:to part="parameters" variable="AddressServiceLinkRequest">
			                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[address]]></bpel:query>
			                </bpel:to>
			            </bpel:copy>
			        </bpel:assign>
        
                    <bpel:invoke name="InvokeADR" partnerLink="AddressServiceLink" 
                    		operation="validateAddress" portType="ns0:AddressService" 
                    		inputVariable="AddressServiceLinkRequest" 
                    		outputVariable="AddressServiceLinkResponse" />
                    
                    <bpel:assign validate="no" name="AssignOutput">
                        <bpel:copy>
                            <bpel:from part="parameters" variable="AddressServiceLinkResponse">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[isValid]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="payload" variable="output">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:isValid]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                </bpel:sequence>
            </bpel:else>
        </bpel:if>
        
        <bpel:reply name="replyOutput" 
               partnerLink="client"
               portType="tns:AutoCheck"
               operation="validate" 
               variable="output"
               />
    </bpel:sequence>
</bpel:process>
